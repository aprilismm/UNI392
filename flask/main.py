# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U0XneYvkdMRymdL3Mi15JU-fDLq7EAMV
"""

import os
from flask import Flask, jsonify, request
from pymongo import MongoClient

app = Flask(__name__)

# MongoDB URI
MONGODB_URI = os.getenv("MONGODB_URI", "mongodb://127.0.0.1:27017")

# Connect to MongoDB
client = MongoClient(MONGODB_URI)
db = client["esp32_sensors"]

# Health check route
@app.route("/ping")
def ping():
    return jsonify({"message": "pong"})


# Route for handling DHT22 sensor data
@app.route("/dht22", methods=["POST"])
def handle_dht22():
    try:
        # Extract JSON data from the request
        sensor_data = request.get_json()

        # Validate required fields
        if not all(field in sensor_data for field in ['temperature', 'humidity', 'timestamp']):
            return jsonify({'error': 'Missing required fields'}), 400

        # Insert data into MongoDB
        dht22_collection = db["dht22"]
        insert_result = dht22_collection.insert_one({
            'temperature': sensor_data['temperature'],
            'humidity': sensor_data['humidity'],
            'timestamp': sensor_data['timestamp']
        })

        return jsonify({
            'message': 'Data added successfully',
            'id': str(insert_result.inserted_id)
        }), 201

    except Exception as error:
        return jsonify({'error': str(error)}), 500


# Route for handling HCSR motion sensor data
@app.route("/hcsr", methods=["POST"])
def handle_hcsr():
    try:
        # Extract JSON data from the request
        sensor_data = request.get_json()

        # Validate required fields
        if not all(field in sensor_data for field in ['motion', 'timestamp']):
            return jsonify({'error': 'Missing required fields'}), 400

        # Insert data into MongoDB
        hcsr_collection = db["hcsr"]
        insert_result = hcsr_collection.insert_one({
            'motion': sensor_data['motion'],
            'timestamp': sensor_data['timestamp']
        })

        return jsonify({
            'message': 'Data added successfully',
            'id': str(insert_result.inserted_id)
        }), 201

    except Exception as error:
        return jsonify({'error': str(error)}), 500


# Run the Flask app
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)